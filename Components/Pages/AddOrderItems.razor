@page "/orders/{OrderId:int}/additem"

@rendermode InteractiveServer

@inject NavigationManager NavigationManager

@inject IOrderItemsService OrderItemsService

<PageTitle>Add Item</PageTitle>

<MudStack Row="true">
    <MudText Typo="Typo.h4">Add Item</MudText>
    <MudSpacer />
    <MudIconButton @onclick="() => Cancel()" Icon="@Icons.Material.Filled.ArrowBack" aria-label="delete" Size="Size.Large"></MudIconButton>
</MudStack>

@if (Item == null)
{
    <MudProgressCircular Indeterminate="true" />
}
else
{

    <EditForm Model="@Item" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <MudGrid>
            <MudItem xs="12" sm="7">
                <MudCard>
                    <MudCardContent>

                        <MudTextField @bind-Value="Item.ItemName" Label="Item Name" For="@(() => Item.ItemName)" />
                        <MudNumericField @bind-Value="Item.ItemCount" Label="Count" For="@(() => Item.ItemCount)" />

                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Edit</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
            <MudItem xs="12" sm="5">
                <MudPaper Class="pa-4 mud-height-full">
                    @if (success)
                    {
                        <MudText Color="Color.Success">Success</MudText>
                    }
                    else
                    {
                        <MudText Color="@Color.Error">
                            <ValidationSummary />
                        </MudText>
                    }
                </MudPaper>
            </MudItem>
        </MudGrid>
    </EditForm>
}

@code {
    [Parameter]
    public int OrderId { get; set; }

    private OrderItems? Item;

    bool success;

    protected override async Task OnInitializedAsync()
    {
        Item = new OrderItems(OrderId, "Item Name", 0);
    }

    private async void OnValidSubmit(EditContext context)
    {
        success = true;

        if (Item != null)
        {
            await OrderItemsService.AddOrderItemsAsync(OrderId, Item.ItemName, Item.ItemCount);
        }

    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/orders/" + OrderId.ToString());
    }
}
