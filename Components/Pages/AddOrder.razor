@page "/orders/add"
@rendermode InteractiveServer

@using System.ComponentModel.DataAnnotations

@inject IOrderService OrderService
@inject ICustomerService CustomerService
@inject NavigationManager NavigationManager

<PageTitle>Add Order</PageTitle>

<MudStack Row="true">
    <MudText Typo="Typo.h4">Add Order</MudText>
    <MudSpacer />
    <MudIconButton @onclick="() => Cancel()" Icon="@Icons.Material.Filled.ArrowBack" aria-label="ArrowBack" Size="Size.Large"></MudIconButton>
</MudStack>

@if (order == null)
{
    <MudProgressCircular Indeterminate="true" />
}
else
{

    <EditForm Model="@order" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <MudGrid>
            <MudItem xs="12" sm="7">
                <MudCard>
                    <MudCardContent>

                        <MudNumericField @bind-Value="order.CustomerId" Label="CustomerId" For="@(() => order.CustomerId)" />

                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Add</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
            <MudItem xs="12" sm="5">
                <MudPaper Class="pa-4 mud-height-full">
                    @if (success)
                    {
                        <MudText Color="Color.Success">Success</MudText>
                    }
                    else
                    {
                        <MudText Color="@Color.Error">
                            <ValidationSummary />
                        </MudText>
                    }
                </MudPaper>
            </MudItem>
        </MudGrid>
    </EditForm>
}

@code {
    private Order? order = new Order(DateTime.Now, 0);

    HashSet<int> CustomerIds;

    bool success;

    protected override async Task OnInitializedAsync()
    {
        var DbCustomers = await CustomerService.GetCustomersAsync();

        CustomerIds = new HashSet<int>();

        foreach (Customer DbCustomer in DbCustomers)
        {
            CustomerIds.Add(DbCustomer.Id);
        }

    }

    private async void OnValidSubmit(EditContext context)
    {
        success = true;

        Console.WriteLine("tes 10");

        await OrderService.AddOrderAsync(order);

        NavigationManager.NavigateTo("/orders");
    }

    private void Cancel()
    {

        NavigationManager.NavigateTo("/orders");
    }
}